<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.zlcook.iqas</groupId>
  <artifactId>iqas-ios-rechart</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>iqas-ios-rechart Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
   <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <springframework.version>4.3.2.RELEASE</springframework.version>
    <junit.version>4.10</junit.version>
    <mysqldriver.version>5.1.37</mysqldriver.version>
    <commons-dbcp.version>1.2.2</commons-dbcp.version>
    <aspectjweaver.version>1.6.9</aspectjweaver.version>
    <apache.commons.version>1.2.0</apache.commons.version>
    <cglib.version>3.1</cglib.version>
    <jsp-api.version>2.0</jsp-api.version>
    <servlet-api.version>3.1.0</servlet-api.version>
    <jstl.version>1.2</jstl.version>
    <standard.version>1.1.2</standard.version>
    <testng.version>6.3.1</testng.version>
    <hibernate.version>3.6.10.Final</hibernate.version>
    <javassist.version>3.9.0.GA</javassist.version>
     <hibernate-validator.version>4.0.2.GA</hibernate-validator.version>
     <json.version>2.4</json.version>
     <jxl.version>2.6.12</jxl.version>
     <c3p0.version>0.9.5.2</c3p0.version>
     <jaxen.version>1.1.6</jaxen.version>
     <dom4j.version>1.6</dom4j.version>
  </properties>
  
  <dependencies>
   
  <!-- xml解析依赖dom4j 和jaxen.jar -->
<dependency>
    <groupId>dom4j</groupId>
    <artifactId>dom4j</artifactId>
    <version>${dom4j.version}</version>
</dependency>
  
<dependency>
    <groupId>jaxen</groupId>
    <artifactId>jaxen</artifactId>
    <version>${jaxen.version}</version>
</dependency>
  
  <!-- https://mvnrepository.com/artifact/com.mchange/c3p0 -->
	<dependency>
	    <groupId>com.mchange</groupId>
	    <artifactId>c3p0</artifactId>
	    <version>${c3p0.version}</version>
	</dependency>
  <!-- log4j2 的结构和实现 -->
    <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.4.1</version>
  </dependency>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.4.1</version>
  </dependency>
  <!-- 对log4j的兼容 -->
    <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-jcl</artifactId>
    <version>2.4.1</version>
  </dependency>
  
  <!-- json格式依赖jar -->
	<dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<version>${json.version}</version>
		<classifier>jdk15</classifier>
	</dependency>
   	<!--⑤ 依赖的测试类库，也可以使用junit,此处使用了TestNG,需要依赖Testng、spring-test两个类库依赖-->
        <dependency>  
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${springframework.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
     <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency> 
    <!-- 依赖spring3.0模块类库 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${springframework.version}</version>
    </dependency>
    <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-beans</artifactId>
           <version>${springframework.version}</version>
     </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-core</artifactId>
           <version>${springframework.version}</version>
       </dependency> 
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-web</artifactId>
           <version>${springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-webmvc</artifactId>
           <version>${springframework.version}</version>
       </dependency>
       <!-- Spring不但可以选择Spring JDBC作为持久化技术，还可以选择Hibernate、IBatista、Jpa\JDo等多种类型的持久化技术，即Spring支持多种ORM -->
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-jdbc</artifactId>
           <version>${springframework.version}</version>
       </dependency>
       <!-- Spring实现orm，提供了对hibernate的支持，HibernateTemp -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${springframework.version}</version>
        </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-tx</artifactId>
           <version>${springframework.version}</version>
       </dependency>
       
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-aop</artifactId>
           <version>${springframework.version}</version>
       </dependency>
       <!-- 集成Hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
              <exclusions>
            	<exclusion>
		         <groupId>org.slf4j</groupId>
  				<artifactId>slf4j-api</artifactId>
		        </exclusion>
            	<exclusion>
            		<artifactId>dom4j</artifactId>
            		<groupId>dom4j</groupId>
            	</exclusion>
              </exclusions> 
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
             <exclusions>
            	<exclusion>
		         <groupId>org.slf4j</groupId>
  				<artifactId>slf4j-api</artifactId>
		        </exclusion>
            </exclusions>  
        </dependency>
        
          <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>  
		<!-- Spring的验证需要实现的接口，提供了JSR303接口的实现 -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>slf4j-api</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>  
        
         <!--依赖的持久化类库 mysql driver -->
       <dependency>
           <groupId>mysql</groupId>
           <artifactId>mysql-connector-java</artifactId>
           <version>${mysqldriver.version}</version>
       </dependency>
       
       <!-- 依赖的公共模块类库 -->
       <dependency>
              <groupId>commons-dbcp</groupId>
              <artifactId>commons-dbcp</artifactId>
              <version>${commons-dbcp.version}</version>
       </dependency>
       <dependency>
           <groupId>org.aspectj</groupId>
           <artifactId>aspectjweaver</artifactId>
           <version>${aspectjweaver.version}</version>
       </dependency>
       <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>${cglib.version}</version>
        </dependency>
  <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet-api.version}</version>
        <scope>provided</scope> 
        
    </dependency>
     <dependency>
           <groupId>javax.servlet.jsp</groupId>
           <artifactId>jsp-api</artifactId>
           <version>${jsp-api.version}</version>
           <scope>provided</scope>
       </dependency>
       <dependency>
              <groupId>taglibs</groupId>
              <artifactId>standard</artifactId>
              <version>${standard.version}</version>
       </dependency>
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>${jstl.version}</version>
    </dependency>
    	<!-- 二进制字节码-->
	    <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
	     </dependency>
    <!--  将表单中的数据复制到bean中 -->
    <dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils</artifactId>
		<version>1.9.2</version>
	</dependency>
  
  </dependencies>
  <build>
  <plugins>
    <!-- 使用UTF-8编码处理资源文件 ,没有设置版本因为该插件在超级POM中设定了-->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
          <configuration>
              <encoding>UTF-8</encoding>
          </configuration>
      </plugin>
      
      <!-- 支持jdk1.7 -->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
           <!-- if you want to use the Java 8 language features (-source 1.8) and also want the compiled classes to be compatible with JVM 1.8 (-target 1.8),  -->
              <source>1.7</source>
              <target>1.7</target>
          </configuration>
      </plugin>
      </plugins>
    <finalName>iqas-ios-rechart</finalName>
  </build>
 
</project>
